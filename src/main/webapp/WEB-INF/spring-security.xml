<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	
    <http auto-config="true" use-expressions="true">
    	<headers>
			<cache-control />
		</headers>
    	
    	<intercept-url pattern="GwtpSpringSecurity/*" access="permitAll" />
    	<intercept-url pattern="/GwtpSpringSecurity/*" access="permitAll" />
    	<intercept-url pattern="/login.jsp?logout" access="isAnonymous()" />
    	<intercept-url pattern="/login*" access="isAnonymous()" />
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
    	
    	<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/home"
		    login-processing-url="/login-process"
		    always-use-default-target="true" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" logout-url="/logout-process" delete-cookies="JSESSIONID" />
		<!-- enable csrf protection -->
		<csrf/>
    </http>
	 
	 <!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
		    <password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT c.email as username, p.password, p.enabled 
										 FROM Person p 
										 INNER JOIN Contact c ON p.contact_id = c.contact_id 
										 WHERE c.email =?"
				authorities-by-username-query="SELECT c.email as username, CONCAT('ROLE_', r.role) as role
											   FROM Person p
											   INNER JOIN Contact c ON p.contact_id = c.contact_id
											   INNER JOIN Role r ON r.role_id = p.role_id
											   WHERE c.email =?" 
			/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>
	
	<!-- Custom entry point to indicate that the user needs to authenticate first -->		
	<!-- <beans:bean id="customAuthenticationEntryPoint" class="com.swallace.gwtp.springsecurity.server.security.CustomAuthenticationEntryPoint" />
	 -->
	<!-- Custom handler to indicate that the authentication is successful -->		
	<!-- <beans:bean id="customAuthenticationSuccessHandler" class="com.swallace.gwtp.springsecurity.server.security.CustomAuthenticationSuccessHandler"/>
	 -->
	<!-- Custom handler to indicate that the authentication has failed -->	
	<!--<beans:bean id="customAuthenticationFailureHandler" class="com.swallace.gwtp.springsecurity.server.security.CustomAuthenticationFailureHandler"/>
	 -->	
</beans:beans>
